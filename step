digraph {
  node[fontsize=6];
  edge[fontsize=6, arrowsize=0.6];
  0 [label="9: {0,1} [m, x] m = x"];
  1 [label="8: {0,1} [m, x] m = x"];
  2 [label="7: {0,1} [m, x] m = x"];
  3 [label="6: {1,1} [n, r, m, x] m = x"];
  4 [label="5: {0,1} [m, x] m = x"];
  5 [label="4: {0,1} [m, x] m = x"];
  6 [label="3: {1,1} [n, r, m, x] m = x"];
  7 [label="2: {0,1} [ m
      , x ] (m = x) || ((0 <= ((10 * x) + (m + (10 * (((-8 * x) + (-1 * m)) / 9))))) && (0 <= (x + ((9 * (((-8 * m) + (-1 * x)) / 9)) + (8 * m)))))"];
  8 [label="1: {1,1} [ n
      , r
      , m
      , x ] ((not ((not m = x)) || ((not (n + ((-1 * r) + (-9 * ((-1 + n) / 9)))) = 0)))) || ((0 <= ((9 * (((-1 * x) + m) / 9)) + (x + (-1 * m)))) && (((r + ((-1 * n) + (9 * ((-1 + n) / 9)))) = 0) && (0 <= ((90 * x) + ((-81 * m) + (90 * (((8 * m) + (-8 * x)) / 9)))))))"];
  9 [label="0: {1,2} [ n
      , r
      , m
      , x ] ((n > 0) && (m = n)) -> (r = x)"];
  m_0 [shape=point, width=0.00001,height=0.00001];
  m_0 -> 0 [label="R:m = x []"];
  m_1 [shape=point, width=0.00001,height=0.00001];
  m_1 -> 1 [label="R:m = x []"];
  m_2 [shape=point, width=0.00001,height=0.00001];
  m_2 -> 2 [label="R:m = x []"];
  m_3 [shape=point, width=0.00001,height=0.00001];
  m_3 -> 3 [label="R:((n - (9 * ((n - 1) / 9))) = r) && (m = x) [  ]"];
  m_4 [shape=point, width=0.00001,height=0.00001];
  m_4 -> 4 [label="R:m = x []"];
  m_5 [shape=point, width=0.00001,height=0.00001];
  m_5 -> 5 [label="R:m = x []"];
  m_6 [shape=point, width=0.00001,height=0.00001];
  m_6 -> 6 [label="R:((n - (9 * ((n - 1) / 9))) = r) && (m = x) [  ]"];
  m_7 [shape=point, width=0.00001,height=0.00001];
  m_7 -> 7 [label="R:m = x []"];
  m_8 [shape=point, width=0.00001,height=0.00001];
  m_8 -> 8 [label="R:((n - (9 * ((n - 1) / 9))) = r) && (m = x) [  ]"];
  0 -> 0 [label="R:(x > 9) && (((x / 10) + (x % 10)) = x/1) [ ( x
                                             , x/1 ) ]", style=dashed];
  0 -> 4 [label="R:(x > 9) && (((x / 10) + (x % 10)) = x/1) [ ( x
                                             , x/1 ) ]"];
  1 -> 1 [label="R:(x > 9) && (((x / 10) + (x % 10)) = x/1) [ ( x
                                             , x/1 ) ]", style=dashed];
  1 -> 5 [label="R:(x > 9) && (((x / 10) + (x % 10)) = x/1) [ ( x
                                             , x/1 ) ]"];
  2 -> 2 [label="R:(x > 9) && (((x / 10) + (x % 10)) = x/1) [ ( x
                                             , x/1 ) ]", style=dashed];
  2 -> 3 [label="L:(n - (9 * ((n - 1) / 9))) = r [  ]"];
  3 -> 3 [label="R:(x > 9) && (((x / 10) + (x % 10)) = x/1) [ ( x
                                             , x/1 ) ]", style=dashed];
  3 -> 6 [label="R:(x > 9) && (((x / 10) + (x % 10)) = x/1) [ ( x
                                             , x/1 ) ]"];
  4 -> 7 [label="R:(x > 9) && (((x / 10) + (x % 10)) = x/1) [ ( x
                                             , x/1 ) ]"];
  5 -> 6 [label="L:(n - (9 * ((n - 1) / 9))) = r [  ]"];
  6 -> 8 [label="R:(x > 9) && (((x / 10) + (x % 10)) = x/1) [ ( x
                                             , x/1 ) ]"];
  7 -> 8 [label="L:(n - (9 * ((n - 1) / 9))) = r [  ]"];
  7 -> 9 [label="L:(x <= 9) && ((n - (9 * ((n - 1) / 9))) = r) [  ]"];
  8 -> 9 [label="R:x <= 9 []"];
}